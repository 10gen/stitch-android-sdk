apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'jacoco-android'
apply plugin: 'com.jfrog.bintray'

ext.pomDisplayName = "Android FCM Service"

buildscript {
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'digital.wup:android-maven-publish:3.3.0'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

android {
    compileSdkVersion target_api
    defaultConfig {
        minSdkVersion min_api
        targetSdkVersion target_api

        Properties properties = new Properties()
        File file = project.rootProject.file('local.properties')
        if (file.exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
        }
        if (!properties.getProperty("test.stitch.fcmSenderId", "").isEmpty()) {
            testInstrumentationRunnerArgument "test.stitch.fcmSenderId", properties.getProperty("test.stitch.fcmSenderId", "")
        }
        if (!properties.getProperty("test.stitch.fcmApiKey", "").isEmpty()) {
            testInstrumentationRunnerArgument "test.stitch.fcmApiKey", properties.getProperty("test.stitch.fcmApiKey", "")
        }
    }
}

dependencies {
    implementation project(':android:stitch-android-core')
    api project(':core:core-services:stitch-core-services-fcm')

    androidTestImplementation project(':android:stitch-android-testutils')
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
