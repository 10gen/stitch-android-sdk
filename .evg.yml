functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-android-sdk"

  "install_aws_cli":
    - command: shell.exec
      params:
        script: |
          set -e
          echo "setting up AWS CLI"
          curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
          unzip awscli-bundle.zip
          ./awscli-bundle/install -b ~/bin/aws

  "set_github_build_status":
    - command: shell.exec
      params:
        silent: true
        script: |
          status_url=`curl -X POST -d "{}" -H "Content-Type: application/json" "${stitch_evg_hook_url}?secret=${stitch_evg_secret}&versionId=${version_id}"`
          if [ "$status_url" = "null" ]; then
            exit 0
          fi
          status_url=`sed -e 's/^"//' -e 's/"$//' <<<"$status_url"`
          state=`cat commit_state`
          curl -X POST -H "Content-Type: application/json" $status_url -d "{\"state\": \"$state\", \"target_url\": \"https://evergreen.mongodb.com/build/${build_id}\", \"context\": \"continuous-integration/evergreen-ci/${build_variant}\"}"

tasks:
  - name: github_pull_request_start
    priority: 100
    commands:
      - command: shell.exec
        params:
          script: |
            if ! [ "${is_patch}" = "true" ]; then
              exit 0
            fi
            echo pending > commit_state
      - func: "set_github_build_status"

  - name: github_pull_request_end
    depends_on:
      - name: github_pull_request_start
      - name: run_tests
        status: "*"
        variant: linux-64
    commands:
      - command: shell.exec
        params:
          silent: true
          script: |
            if ! [ "${is_patch}" = "true" ]; then
              exit 0
            fi
            curl -H "Auth-Username: ${evg_rest_user}" -H "Api-Key: ${evg_rest_api_key}"  https://evergreen.mongodb.org/rest/v1/builds/${build_id} | python -c "import sys, json; tasks = json.load(sys.stdin)['tasks']; sys.exit(0) if all(tasks[task]['status'] == 'success' or task == 'github_pull_request_end'  for task in tasks) else sys.exit(1)"
            if [ $? -eq 0 ]; then
              state="success"
            else
              state="failure"
            fi
            echo $state > commit_state
      - func: "set_github_build_status"

  - name: run_tests
    commands:
      - func: "fetch_source"

      - command: shell.exec
        params:
          silent: true
          script: |
            set -e

            cd stitch-android-sdk
            echo "building test apk"
            ./gradlew assembleAndroidTest < /dev/null

            APK_FILE_PATH="./stitch/build/outputs/apk/androidTest/debug/stitch-debug-androidTest.apk"
            TEST_PACKAGE="com.mongodb.stitch.android.test"
            URL="${device_farm_url}?test_type=android&test_package=$TEST_PACKAGE"

            echo "running test apk"
            RESULT=`cat $APK_FILE_PATH | curl $URL -H "Authorization: ${device_farm_secret}" --data-binary @-`
            echo $RESULT
            echo $RESULT | grep -P "OK \(\d+ tests\)"

  - name: docs_dist
    depends_on:
      - name: run_tests
    commands:
      - func: "fetch_source"
      - func: "install_aws_cli"
      - command: shell.exec
        params:
          silent: true
          script: |
            set -e
            export PATH=$HOME/bin:$PATH
            export AWS_ACCESS_KEY_ID=${sdks_aws_key}
            export AWS_SECRET_ACCESS_KEY=${sdks_aws_secret}
            cd stitch-android-sdk
            echo "building docs"
            ./gradlew generateReleaseJavadoc < /dev/null
            ./gradlew stitch:copyDocsToS3

buildvariants:
- name: linux-64
  display_name: Linux-64
  run_on:
    - baas-java-sdk
  tasks:
    - name: github_pull_request_start
    - name: run_tests
    - name: docs_dist
    - name: github_pull_request_end