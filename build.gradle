// Top-level build file where you can add configuration options common to all sub-projects/modules.

plugins {
    id "com.github.spotbugs" version "1.6.1"
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    buildscript {
        ext {
            kotlin_version = '1.2.41'
            architecture_components_version = '1.1.1'
            support_library_version = '27.1.1'
            google_play_services_version = '15.0.1'
        }
//        dependencies {
//            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        }
    }
}

def configDir = new File(rootDir, 'config')

configure(subprojects) {
    apply plugin: 'checkstyle'
    apply plugin: "com.github.spotbugs"

    afterEvaluate { project ->
        if (project.plugins.hasPlugin("com.android.library") || project.plugins.hasPlugin("com.android.application")) {
            android {
                lintOptions {
                    disable 'InvalidPackage'
                }
            }
//            spotbugs {
//                sourceSets {
//                    // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
//                    main {
//                        java.srcDirs = ['src/main/java']
//                    }
//                }
//            }
        } else {

        }
    }

    checkstyle {
        toolVersion = "7.4"
        configFile = new File(configDir, 'checkstyle.xml')
        configProperties.checkstyleConfigDir = configDir
    }

    spotbugs {
//        sourceSets = [sourceSets.main]
        toolVersion = '3.1.3'
    }

    tasks.withType(com.github.spotbugs.SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    dependencies {
        spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    }
}

//configure([
// ':core',
//// ':android',
//// ':server',
//// ':todo',
//// ':core-admin-client',
//// ':android-core',
//// ':android-mongodb-local',
//// ':android-mongodb-stitch',
//// ':example1'
//]) {
//        apply plugin: 'java'
//        dependencies {
//            testCompile(
//                    'org.junit.jupiter:junit-jupiter-api:5.2.0'
//            )
////            testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
//            testRuntimeOnly(
//                    'org.junit.jupiter:junit-jupiter-engine:5.2.0'
//            )
//        }
////        test {
////            useJUnitPlatform()
////        }
//    }

subprojects {
//    test {
//        useJUnitPlatform()
//    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
