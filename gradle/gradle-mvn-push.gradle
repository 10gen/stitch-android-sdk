// Adapted from https://github.com/codepath/android_guides/wiki/Building-your-own-Android-library

apply plugin: 'maven'
apply plugin: 'com.vanniktech.android.javadoc'

def isReleaseBuild() {
    return POM_VERSION_NAME.contains("SNAPSHOT") == false
}

def getRepositoryUrl() {
    if (isReleaseBuild()) {
        return "https://oss.sonatype.org/content/repositories/releases/"
    } else {
        return "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}


def getDocsOutputDir() {
    return "${project.projectDir}/javaDoc/release"
}

def getDocsDestUrl() {
    return "s3://${S3_BUCKET}/${S3_DIRECTORY}/docs/${POM_VERSION_NAME}"
}

uploadArchives {
    repositories {
        mavenDeployer {

            pom {
                name = POM_NAME
                packaging = POM_PACKAGING
                version = POM_VERSION_NAME
                artifactId = POM_ARTIFACT_ID
                groupId = POM_GROUP
            }

             def properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())

            def sonatypeUsername = properties.getProperty("sonatypeUsername")
            def sonatypePassword = properties.getProperty("sonatypePassword")

            if (sonatypeUsername && sonatypePassword) {
                // Add other pom properties here if you want (developer details / licenses)
                repository(url: getRepositoryUrl()) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    baseName = POM_ARTIFACT_ID
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    baseName = POM_ARTIFACT_ID
    from android.sourceSets.main.java.srcDirs
}

// These will be uploaded but Android Studio does not know how to use them
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

task copyDocsToS3(type: Exec) {
    commandLine 'aws', 's3', 'cp', '--acl', 'public-read', '--recursive', getDocsOutputDir(), getDocsDestUrl()
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
